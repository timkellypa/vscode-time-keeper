name: Publish
on:
  release:
    types:
      - published
jobs:
  publish-vsix:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - name: Package VS Code Extension
        id: package
        uses: nhedger/package-vscode-extension@v1
      - name: Publish VS Code extension artifact
        uses: actions/upload-artifact@v3
        with:
          name: vscode-time-keeper
          path: '${{ steps.package.outputs.packagePath }}'
      - name: "Get upload_url"
        run: echo "::set-output name=upload_url::https://uploads.github.com/repos/$GITHUB_REPOSITORY/releases/$(jq --raw-output '.release.id' $GITHUB_EVENT_PATH)/assets{?name,label}"  
        id: release
      - name: "Get asset file name"
        id: asset_file_name
        run: echo "::set-output name=asset_name::$(basename ${{ steps.package.outputs.packagePath }})"
      - name: "Upload VSIX"
        uses: "actions/upload-release-asset@v1"
        env:
          GITHUB_TOKEN: ${{ secrets.TWK_TOKEN }}
        with:
          asset_content_type: "text/plain"
          asset_name: "${{ steps.asset_file_name.outputs.asset_name }}"
          asset_path: "${{ steps.package.outputs.packagePath }}"
          upload_url: ${{ steps.release.outputs.upload_url }}

name: Validate
on:
  push:
  pull_request:
    branches: [ master ]
jobs:
  test:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - run: npm ci
      - run: npm test
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'